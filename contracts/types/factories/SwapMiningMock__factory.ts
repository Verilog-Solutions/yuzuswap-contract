/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SwapMiningMock } from "../SwapMiningMock";

export class SwapMiningMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SwapMiningMock> {
    return super.deploy(overrides || {}) as Promise<SwapMiningMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapMiningMock {
    return super.attach(address) as SwapMiningMock;
  }
  connect(signer: Signer): SwapMiningMock__factory {
    return super.connect(signer) as SwapMiningMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapMiningMock {
    return new Contract(address, _abi, signerOrProvider) as SwapMiningMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "recorder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "input",
        type: "address",
      },
      {
        internalType: "address",
        name: "output",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outAmount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101b7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063972eeb5b14610046578063b203bb9914610086578063e343fe12146100b4575b600080fd5b6100746004803603604081101561005c57600080fd5b506001600160a01b038135811691602001351661010a565b60408051918252519081900360200190f35b6100746004803603604081101561009c57600080fd5b506001600160a01b0381358116916020013516610124565b6100f6600480360360a08110156100ca57600080fd5b506001600160a01b0381358116916020810135821691604082013516906060810135906080013561014d565b604080519115158252519081900360200190f35b600060208181529281526040808220909352908152205481565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b6001600160a01b0380861660009081526020818152604080832093871683529290522080548201905560019594505050505056fea26469706673582212202412d12f3d036c7531dc8634b0ebb911d55ee100c44cd1e2b13458390f3fbeb064736f6c634300060c0033";
