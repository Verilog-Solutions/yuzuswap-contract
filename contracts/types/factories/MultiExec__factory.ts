/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MultiExec } from "../MultiExec";

export class MultiExec__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MultiExec> {
    return super.deploy(overrides || {}) as Promise<MultiExec>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiExec {
    return super.attach(address) as MultiExec;
  }
  connect(signer: Signer): MultiExec__factory {
    return super.connect(signer) as MultiExec__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiExec {
    return new Contract(address, _abi, signerOrProvider) as MultiExec;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MultiExec.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610431806100326000396000f3fe60806040526004361061002d5760003560e01c80635c3e9760146100395780638da5cb5b1461005b57610034565b3661003457005b600080fd5b34801561004557600080fd5b5061005961005436600461024a565b610086565b005b34801561006757600080fd5b50610070610195565b60405161007d919061031e565b60405180910390f35b6000546001600160a01b031633146100b95760405162461bcd60e51b81526004016100b090610332565b60405180910390fd5b60005b81518110156101915760008282815181106100d357fe5b6020026020010151600001516001600160a01b03168383815181106100f457fe5b60200260200101516020015184848151811061010c57fe5b60200260200101516040015160405161012591906102e5565b60006040518083038185875af1925050503d8060008114610162576040519150601f19603f3d011682016040523d82523d6000602084013e610167565b606091505b50509050806101885760405162461bcd60e51b81526004016100b090610367565b506001016100bc565b5050565b6000546001600160a01b031681565b6000606082840312156101b5578081fd5b6101bf606061038c565b905081356101cc816103e3565b815260208281013590820152604082013567ffffffffffffffff8111156101f257600080fd5b8201601f8101841361020357600080fd5b8035610216610211826103b3565b61038c565b81815285602083850101111561022b57600080fd5b61023c8260208301602086016103d7565b604084015250909392505050565b6000602080838503121561025c578182fd5b823567ffffffffffffffff80821115610273578384fd5b818501915085601f830112610286578384fd5b813581811115610294578485fd5b6102a1848583020161038c565b8181528481019250838501865b838110156102d7576102c58a8884358901016101a4565b855293860193908601906001016102ae565b509098975050505050505050565b60008251815b8181101561030557602081860181015185830152016102eb565b818111156103135782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600b908201526a18d85b1b0819985a5b195960aa1b604082015260600190565b60405181810167ffffffffffffffff811182821017156103ab57600080fd5b604052919050565b600067ffffffffffffffff8211156103c9578081fd5b50601f01601f191660200190565b82818337506000910152565b6001600160a01b03811681146103f857600080fd5b5056fea26469706673582212208a2cb166883f8d9e25df223fdf301399a56ff2d99aa5de4b7285845f9cd394fe64736f6c634300060c0033";
